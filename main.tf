// Terraform Variables
variable "gcp_project" {
  description = "GCP project name"
}

variable "gcp_region" {
  description = "GCP region"
  default     = "us-east1"
}

// Google Provider Configuration
provider "google" {
  project     = var.gcp_project
  region      = var.gcp_region
}

// -------------------------------------------------------------------
// 'Insert Terraform code generated by the Configuration Designer here
// -------------------------------------------------------------------

//--------------------------------------------------------------------
// Variables
variable "compute_instance_disk_image" {}
variable "compute_instance_disk_size" {}
variable "compute_instance_instance_count" {}
variable "compute_instance_machine_type" {}

variable "network_project_id" {}

//--------------------------------------------------------------------
// Modules
module "compute_instance" {
  source  = "app.terraform.io/jdefrank-gcpdemo/compute-instance/google"
  version = "0.1.6"

  disk_image = "${var.compute_instance_disk_image}"
  disk_size = "${var.compute_instance_disk_size}"
  instance_count = "${var.compute_instance_instance_count}"
  machine_type = "${var.compute_instance_machine_type}"
  name_prefix = "quest-demo"
  subnetwork = "module.network.subnets[0].us-east1.subnet-01.name"
}

module "network_firewall" {
  source  = "app.terraform.io/jdefrank-gcpdemo/network-firewall/google"
  version = "0.1.6"

  name = "allow-80"
  network = "${module.network.network_self_link}"
  ports = [80]
  priority = 100
  protocol = "tcp"
  source_ranges = ["0.0.0.0/0"]
}

module "network" {
  source  = "app.terraform.io/jdefrank-gcpdemo/network/google"
  version = "3.4.0"

  network_name = "quest-demo-network"
  project_id = "${var.network_project_id}"
  subnets = [
    {
      subnet_name = "subnet-01"
      subnet_ip = "10.10.10.0/24"
      subnet_region = "us-east1"
    }
  ]
}


// -------------------------------------------------------------------

// data sources
data "google_compute_subnetwork" "vpc_subnet" {
  self_link = module.network.subnets_self_links[0]
}

// Terraform outputs
output "network_name" {
  value = module.network.network_name
}

output "subnet_gateway_address" {
  value = data.google_compute_subnetwork.vpc_subnet.gateway_address
}

output "firewall_self_link" {
  value = module.network_firewall.self_link
}

output "compute_instance_addresses" {
  value = module.compute_instance.addresses
}
